*** Settings ***
Documentation   App Metrics failures

Library  MexMasterController  mc_address=%{AUTOMATION_MC_ADDRESS}   root_cert=%{AUTOMATION_MC_CERT}

*** Variables ***
${cloudlet_name_openstack_shared}=   automationBonnCloudlet
${operator}=                       TDG
	
*** Test Cases ***
AppMetrics - get with app name only shall return error
   [Documentation]
   ...  get app metrics with app name only
   ...  verify error

   ${token}=  Get Token
	
   Run Keyword and Expect Error  *  Get App Metrics  region=US  app_name=${cloudlet_name_openstack_shared}  selector=cpu  last=1  token=${token}  #use_defaults=${False}
   ${status_code}=  Response Status Code
   ${body} =        Response Body
   Should Be Equal As Integers  ${status_code}  400
   Should Be Equal              ${body}         {"message":"App details must be present"}

   Run Keyword and Expect Error  *  Get App Metrics  region=US  app_name=${cloudlet_name_openstack_shared}  selector=connections  last=1  token=${token}  #use_defaults=${False}
   ${status_code}=  Response Status Code
   ${body} =        Response Body
   Should Be Equal As Integers  ${status_code}  400
   Should Be Equal              ${body}         {"message":"App details must be present"}

   Run Keyword and Expect Error  *  Get App Metrics  region=US  app_name=${cloudlet_name_openstack_shared}  selector=disk  last=1  token=${token}  #use_defaults=${False}
   ${status_code}=  Response Status Code
   ${body} =        Response Body
   Should Be Equal As Integers  ${status_code}  400
   Should Be Equal              ${body}         {"message":"App details must be present"}

   Run Keyword and Expect Error  *  Get App Metrics  region=US  app_name=${cloudlet_name_openstack_shared}  selector=mem  last=1  token=${token}  #use_defaults=${False}
   ${status_code}=  Response Status Code
   ${body} =        Response Body
   Should Be Equal As Integers  ${status_code}  400
   Should Be Equal              ${body}         {"message":"App details must be present"}

   Run Keyword and Expect Error  *  Get App Metrics  region=US  app_name=${cloudlet_name_openstack_shared}  selector=network  last=1  token=${token}  #use_defaults=${False}
   ${status_code}=  Response Status Code
   ${body} =        Response Body
   Should Be Equal As Integers  ${status_code}  400
   Should Be Equal              ${body}         {"message":"App details must be present"}

#CloudletMetrics - get with no cloudlet/operator name shall return error
#   [Documentation]
#   ...  get cloudlet metrics with no cloudlet/operator name
#   ...  verify error
#
#   ${token}=  Get Token
#	
#   Run Keyword and Expect Error  *  Get Cloudlet Metrics  region=US  selector=utilization  last=1  token=${token}  use_defaults=${False}
#
#   ${status_code}=  Response Status Code
#   ${body} =        Response Body
#
#   Should Be Equal As Integers  ${status_code}  400
#   Should Be Equal              ${body}         {"message":"Cloudlet details must be present"}

AppMetrics - get with no token name shall return error
   [Documentation]
   ...  get app metrics with no token
   ...  verify error

   ${token}=  Get Token
	
   Run Keyword and Expect Error  *  Get App Metrics  app_name=${cloudlet_name_openstack_shared}  operator_name=${operator}  region=US  selector=utilization  last=1  use_defaults=${False}

   ${status_code}=  Response Status Code
   ${body} =        Response Body

   Should Be Equal As Integers  ${status_code}  400
   Should Be Equal              ${body}         {"message":"no bearer token found"}

AppMetrics - get with no selector name shall return error
   [Documentation]
   ...  get app metrics with no selector
   ...  verify error

   ${token}=  Get Token
	
   Run Keyword and Expect Error  *  Get App Metrics  app_name=${cloudlet_name_openstack_shared}  developer_name=xxxx  operator_name=${operator}  region=US  token=${token}  

   ${status_code}=  Response Status Code
   ${body} =        Response Body

   Should Be Equal As Integers  ${status_code}  400
   Should Be Equal              ${body}         {"message":"Invalid appinst selector: "}

AppMetrics - get with invalid selector name shall return error
   [Documentation]
   ...  get app metrics with invalid selector
   ...  verify error

   ${token}=  Get Token
	
   Run Keyword and Expect Error  *  Get App Metrics  app_name=${cloudlet_name_openstack_shared}  developer_name=xxxx  operator_name=${operator}  selector=xx  region=US  token=${token}

   ${status_code}=  Response Status Code
   ${body} =        Response Body

   Should Be Equal As Integers  ${status_code}  400
   Should Be Equal              ${body}         {"message":"Invalid appinst selector: xx"}

AppMetrics - get with invalid start time shall return error
   [Documentation]
   ...  get app metrics with invalid start time
   ...  verify error

   ${token}=  Get Token
	
   Run Keyword and Expect Error  *  Get App Metrics  app_name=${cloudlet_name_openstack_shared}  developer_name=zzzz  operator_name=${operator}  selector=utilization  region=US  start_time=2019-09-26T04:01:01  token=${token}

   ${status_code}=  Response Status Code
   ${body} =        Response Body

   # EDGECLOUD-1332
   # EDGECLOUD-1569 metrics with invalid start/end time give strange date in error message

   Should Be Equal As Integers  ${status_code}  400
   Should Contain               ${body}         {"message":"Invalid POST data: code=400, message=parsing time \\"\\"2019-09-26T04:01:01\\"\\" into RFC3339 format failed. Example: \\"2006-01-02T15:04:05Z07:00\\""} 

AppMetrics - get with invalid end time shall return error
   [Documentation]
   ...  get app metrics with invalid end time
   ...  verify error

   ${token}=  Get Token
	
   Run Keyword and Expect Error  *  Get App Metrics  app_name=${cloudlet_name_openstack_shared}  developer_name=zzzz  operator_name=${operator}  selector=utilization  region=US  end_time=2019-09  token=${token}

   ${status_code}=  Response Status Code
   ${body} =        Response Body

   # EDGECLOUD-1332
   # EDGECLOUD-1569 metrics with invalid start/end time give strange date in error message

   Should Be Equal As Integers  ${status_code}  400
   Should Contain               ${body}         {"message":"Invalid POST data: code=400, message=parsing time \\"\\"2019-09\\"\\" into RFC3339 format failed. Example: \\"2006-01-02T15:04:05Z07:00\\""} 

AppMetrics - get with invalid start/end time shall return error
   [Documentation]
   ...  get app metrics with invalid start/end time
   ...  verify error

   ${token}=  Get Token
	
   Run Keyword and Expect Error  *  Get App Metrics  app_name=${cloudlet_name_openstack_shared}  developer_name=zzzz  operator_name=${operator}  selector=utilization  region=US  start_time=x  end_time=2019-09  token=${token}  use_defaults=${False}

   ${status_code}=  Response Status Code
   ${body} =        Response Body

   # EDGECLOUD-1332
   # EDGECLOUD-1569 metrics with invalid start/end time give strange date in error message

   Should Be Equal As Integers  ${status_code}  400
   Should Contain               ${body}         {"message":"Invalid POST data: code=400, message=parsing time \\"\\"x\\"\\" into RFC3339 format failed. Example: \\"2006-01-02T15:04:05Z07:00\\""}

AppMetrics - get with invalid last shall return error
   [Documentation]
   ...  get app metrics with invalid last
   ...  verify error

   ${token}=  Get Token
	
   Run Keyword and Expect Error  *  Get App Metrics  app_name=${cloudlet_name_openstack_shared}  developer_name=zzzz  operator_name=${operator}  selector=utilization  region=US  last=x  token=${token}

   ${status_code}=  Response Status Code
   ${body} =        Response Body

   Should Be Equal As Integers  ${status_code}  400
   Should Be Equal              ${body}         {"message":"Invalid POST data: code=400, message=Unmarshal type error: expected=int, got=string, field=Last, offset=223"} 

AppMetrics - get with app not found shall return an empty list
   [Documentation]
   ...  get app metrics with operator not found
   ...  verify empty list is returned

   ${token}=  Get Token
	
   ${metrics}=  Get App Metrics  app_name=${cloudlet_name_openstack_shared}  developer_name=zzzz  operator_name=xx  selector=cpu  region=US  token=${token}
	
   Should Be Equal  ${metrics['data'][0]['Series']}        ${None}
   Should Be Equal  ${metrics['data'][0]['Messages']}      ${None}

AppMetrics - get without region shall return error
   [Documentation]
   ...  get app metrics without region 
   ...  verify error

   ${token}=  Get Token

   Run Keyword and Expect Error  *  Get App Metrics  app_name=${cloudlet_name_openstack_shared}  developer_name=zzzz  operator_name=${operator}  selector=cpu  token=${token}

   ${status_code}=  Response Status Code
   ${body} =        Response Body

   Should Be Equal As Integers  ${status_code}  400
   Should Be Equal              ${body}         {"message":"no region specified"}

