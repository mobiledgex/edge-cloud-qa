# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import alert_pb2 as alert__pb2


class AlertApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ShowAlert = channel.unary_stream(
        '/edgeproto.AlertApi/ShowAlert',
        request_serializer=alert__pb2.Alert.SerializeToString,
        response_deserializer=alert__pb2.Alert.FromString,
        )


class AlertApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ShowAlert(self, request, context):
    """Show alerts
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AlertApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ShowAlert': grpc.unary_stream_rpc_method_handler(
          servicer.ShowAlert,
          request_deserializer=alert__pb2.Alert.FromString,
          response_serializer=alert__pb2.Alert.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'edgeproto.AlertApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
