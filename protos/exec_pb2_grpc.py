# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import exec_pb2 as exec__pb2


class ExecApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RunCommand = channel.unary_unary(
        '/edgeproto.ExecApi/RunCommand',
        request_serializer=exec__pb2.ExecRequest.SerializeToString,
        response_deserializer=exec__pb2.ExecRequest.FromString,
        )
    self.RunConsole = channel.unary_unary(
        '/edgeproto.ExecApi/RunConsole',
        request_serializer=exec__pb2.ExecRequest.SerializeToString,
        response_deserializer=exec__pb2.ExecRequest.FromString,
        )
    self.ShowLogs = channel.unary_unary(
        '/edgeproto.ExecApi/ShowLogs',
        request_serializer=exec__pb2.ExecRequest.SerializeToString,
        response_deserializer=exec__pb2.ExecRequest.FromString,
        )
    self.SendLocalRequest = channel.unary_unary(
        '/edgeproto.ExecApi/SendLocalRequest',
        request_serializer=exec__pb2.ExecRequest.SerializeToString,
        response_deserializer=exec__pb2.ExecRequest.FromString,
        )


class ExecApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RunCommand(self, request, context):
    """Run a Command or Shell on a container
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunConsole(self, request, context):
    """Run console on a VM
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ShowLogs(self, request, context):
    """View logs for AppInst
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendLocalRequest(self, request, context):
    """This is used internally to forward requests to other Controllers.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ExecApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RunCommand': grpc.unary_unary_rpc_method_handler(
          servicer.RunCommand,
          request_deserializer=exec__pb2.ExecRequest.FromString,
          response_serializer=exec__pb2.ExecRequest.SerializeToString,
      ),
      'RunConsole': grpc.unary_unary_rpc_method_handler(
          servicer.RunConsole,
          request_deserializer=exec__pb2.ExecRequest.FromString,
          response_serializer=exec__pb2.ExecRequest.SerializeToString,
      ),
      'ShowLogs': grpc.unary_unary_rpc_method_handler(
          servicer.ShowLogs,
          request_deserializer=exec__pb2.ExecRequest.FromString,
          response_serializer=exec__pb2.ExecRequest.SerializeToString,
      ),
      'SendLocalRequest': grpc.unary_unary_rpc_method_handler(
          servicer.SendLocalRequest,
          request_deserializer=exec__pb2.ExecRequest.FromString,
          response_serializer=exec__pb2.ExecRequest.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'edgeproto.ExecApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
