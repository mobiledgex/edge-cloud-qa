cycle = "${cycle}"
//components = "${components}"
controller = "${controller}"
dme = "${dme}"

echo cycle
echo controller

currentBuild.displayName = cycle

node('jenkinsSlave1'){
    stage('Checkout') {
        dir('go/src/github.com/mobiledgex') {
            checkout([$class: 'GitSCM', 
                branches: [[name: 'master']],
                doGenerateSubmoduleConfigurations: false,
                extensions: [
                    [$class: 'SparseCheckoutPaths',  sparseCheckoutPaths:[
                        [$class:'SparseCheckoutPath', path:'testcases/*'],
                        [$class:'SparseCheckoutPath', path:'jenkins/*'],
                        [$class:'SparseCheckoutPath', path:'modules/*'],
                        [$class:'SparseCheckoutPath', path:'protos/*'],
                        [$class:'SparseCheckoutPath', path:'certs/*']
                    ]]
                ],
                submoduleCfg: [],
                userRemoteConfigs: [[credentialsId: '79b116ea-d7ac-4d6c-928d-49b79e5f9bef',
                url: 'https://github.com/mobiledgex/edge-cloud-qa.git']]])
        }
    }
    //stage('start environment') {
    //    dir('go/src/github.com/mobiledgex/edge-cloud/tls/out/') {
    //        sh 'cp $HOME/workspace/buildEdgecloud/go/src/github.com/mobiledgex/edge-cloud/tls/out/* .'
    //    }
    //    dir('go/src/github.com/mobiledgex/edge-cloud/setup-env/e2e-tests/') {
    //        sh 'export ANSIBLE_DIR=$HOME/workspace/buildEdgecloud/go/src/github.com/mobiledgex/edge-cloud/setup-env/ansible;export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin:$HOME/workspace/buildEdgecloud/go/bin/;export GOROOT=/usr/local/go;export GOPATH=$WORKSPACE/go;e2e-tests -testfile testfiles/deploy_start_create_automation.yml -setupfile setups/local_multi_automation.yml -stop'
    //    }
    //}
    
    stage("execute tests") {
      dir('go/src/github.com/mobiledgex/jenkins') {
         status = sh(script:'export PYTHONPATH=$WORKSPACE/go/src/github.com/mobiledgex/modules;export AUTOMATION_CONTROLLER_ADDRESS=' + controller + ';export AUTOMATION_DME_ADDRESS=' + dme + ';./execJira.py', returnStatus: true);
         println status
         if(status != 0) {
            echo "execJira.py failed with statuscode=" + status
            currentBuild.result = 'FAILURE'
         }
      }

    }
}
