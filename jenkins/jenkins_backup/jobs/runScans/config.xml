<?xml version='1.1' encoding='UTF-8'?>
<!--
 Copyright 2022 MobiledgeX, Inc

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<flow-definition plugin="workflow-job@2.42">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.2">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>SlaveNode</string>
        <string>Cycle</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>NEW JOB DESCRIPTION</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.6"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>20</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.27.1">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SlaveNode</name>
          <defaultValue>jenkinsSlave1</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Cycle</name>
          <defaultValue>2021-11-05_CirrusR3.1</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2633.v6baeedc13805">
    <script>currentBuild.displayName = cycle
//slackurl = &apos;https://mobiledgex.slack.com/services/hooks/jenkins-ci/&apos;
//slackcred = &apos;cdda7d70-b701-4983-b287-e3f46dde02e9&apos;
//slackchannel = &apos;#qa-automation&apos;


pipeline{
    agent { label &apos;jenkinsSlave1&apos; }
    parameters {
        string(name: &apos;SlaveNode&apos;, defaultValue: &apos;jenkinsSlave1&apos;)
        string(name: &apos;Cycle&apos;, defaultValue: &apos;2021-11-05_CirrusR3.1&apos;)

    }

    stages {
        stage(&apos;scans&apos;) {
            parallel {
                stage(&quot;nmap&quot;) {
                    steps {
                        //slackSend baseUrl: slackurl, tokenCredentialId: slackcred, channel: slackchannel, color: &quot;good&quot;, message: &quot;Starting SDK tests&quot;
                        build job: &apos;runNmapScan&apos;, parameters: [
                                string(name: &apos;SlaveNode&apos;, value: params.SlaveNode), 
                                string(name: &apos;Cycle&apos;, value: params.Cycle) 
                                ]
                    }
                    post {
                        failure { 
                            echo &quot;run nmap scan tests failed&quot;
                            //slackSend baseUrl: slackurl, tokenCredentialId: slackcred, channel: slackchannel, color: &quot;fail&quot;, message: &quot;Finished SDK tests with failure&quot;
                        }
                        success {
                            echo &quot;run nmap scan tests passed&quot;
                            //slackSend baseUrl: slackurl, tokenCredentialId: slackcred, channel: slackchannel, color: &quot;good&quot;, message: &quot;Finished SDK tests with success&quot;
                        }
                    }    
                }
                stage(&apos;OWASP ZAP&apos;) {
                    steps {
                        //slackSend baseUrl: slackurl, tokenCredentialId: slackcred, channel: slackchannel, color: &quot;good&quot;, message: &quot;Starting SDK tests&quot;
                        build job: &apos;runOwaspScan&apos;, parameters: [
                                string(name: &apos;SlaveNode&apos;, value: params.SlaveNode), 
                                string(name: &apos;Cycle&apos;, value: params.Cycle) 
                                ]
                    }
                    post {
                        failure { 
                            echo &quot;run OWASP ZAP scan tests failed&quot;
                            //slackSend baseUrl: slackurl, tokenCredentialId: slackcred, channel: slackchannel, color: &quot;fail&quot;, message: &quot;Finished SDK tests with failure&quot;
                        }
                        success {
                            echo &quot;run OWASP ZAP scan tests passed&quot;
                            //slackSend baseUrl: slackurl, tokenCredentialId: slackcred, channel: slackchannel, color: &quot;good&quot;, message: &quot;Finished SDK tests with success&quot;
                        }
                    }    
                }
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>