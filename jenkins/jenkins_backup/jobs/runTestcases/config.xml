<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.42">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.2">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>NumberParallelExecutions</string>
        <string>Platform</string>
        <string>CRMPoolVshpere</string>
        <string>DMERestCert</string>
        <string>Controller</string>
        <string>Cycle</string>
        <string>OpenStackEnv</string>
        <string>Components</string>
        <string>DMERest</string>
        <string>Project</string>
        <string>CRMPoolAnthos</string>
        <string>Area</string>
        <string>VariableFile</string>
        <string>CRMPoolVCD</string>
        <string>InfluxDB</string>
        <string>RunFailedOnly</string>
        <string>CRMPoolOpenstack</string>
        <string>DME</string>
        <string>MasterController</string>
        <string>CommitVersion</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>NEW JOB DESCRIPTION</description>
  <displayName>runTestcases</displayName>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.6"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>20</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.27.1">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Components</name>
          <defaultValue>Automatedxx</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Cycle</name>
          <defaultValue>2021-11-05_CirrusR3.1</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Project</name>
          <defaultValue>ECQ</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MasterController</name>
          <defaultValue>console-qa.mobiledgex.net:443</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Controller</name>
          <defaultValue>mexplat-qa-us.ctrl.mobiledgex.net:55001</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DME</name>
          <defaultValue>us-qa.dme.mobiledgex.net:50051</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DMERest</name>
          <defaultValue>us-qa.dme.mobiledgex.net:38001</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DMERestCert</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VariableFile</name>
          <defaultValue>automation_variables.py</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>InfluxDB</name>
          <defaultValue>notset</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OpenStackEnv</name>
          <defaultValue>notset</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CommitVersion</name>
          <defaultValue>master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RunFailedOnly</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CRMPoolOpenstack</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CRMPoolVshpere</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CRMPoolVCD</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CRMPoolAnthos</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Platform</name>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Controller</string>
              <string>DME</string>
              <string>SDK</string>
              <string>Openstack</string>
              <string>VCD</string>
              <string>Vshpere</string>
              <string>Anthos</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Area</name>
          <defaultValue>flavor</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>NumberParallelExecutions</name>
          <defaultValue>1</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2633.v6baeedc13805">
    <script>last_component = components.split(&apos;,&apos;)[-1]
version = cycle.split(&apos;_&apos;)[0]
//currentBuild.displayName = cycle + &apos;_&apos; + platform + area
currentBuild.displayName = cycle + &apos;_&apos; + platform + last_component

//contoller_components = [&quot;Automated&quot;, &quot;Controller&quot;, &quot;Flavor&quot;]

pipeline{
    agent { label &apos;jenkinsSlave1&apos; }
    parameters {
        string(name: &apos;Components&apos;, defaultValue: &apos;Automatedxx&apos;)
        string(name: &apos;Cycle&apos;, defaultValue: &apos;2021-11-05_CirrusR3.1&apos;)
        string(name: &apos;Project&apos;, defaultValue: &apos;ECQ&apos;)
        string(name: &apos;MasterController&apos;, defaultValue: &apos;console-qa.mobiledgex.net:443&apos;)
        string(name: &apos;Controller&apos;, defaultValue: &apos;mexplat-qa-us.ctrl.mobiledgex.net:55001&apos;)
        string(name: &apos;DME&apos;, defaultValue: &apos;us-qa.dme.mobiledgex.net:50051&apos;)
        string(name: &apos;DMERest&apos;, defaultValue: &apos;us-qa.dme.mobiledgex.net:38001&apos;)
        string(name: &apos;DMERestCert&apos;, defaultValue: &apos;&apos;)
        string(name: &apos;VariableFile&apos;, defaultValue: &apos;automation_variables.py&apos;)
        string(name: &apos;InfluxDB&apos;, defaultValue: &apos;notset&apos;)
        string(name: &apos;OpenStackEnv&apos;, defaultValue: &apos;notset&apos;)
        string(name: &apos;CommitVersion&apos;, defaultValue: &apos;master&apos;)
        booleanParam(name: &apos;RunFailedOnly&apos;, defaultValue: false)
        string(name: &apos;CRMPoolOpenstack&apos;, defaultValue: &apos;&apos;)
        string(name: &apos;CRMPoolVshpere&apos;, defaultValue: &apos;&apos;)
        string(name: &apos;CRMPoolVCD&apos;, defaultValue: &apos;&apos;)
        string(name: &apos;CRMPoolAnthos&apos;, defaultValue: &apos;&apos;)
        choice(name: &apos;Platform&apos;, choices: [&apos;Controller&apos;, &apos;DME&apos;, &apos;SDK&apos;, &apos;Openstack&apos;, &apos;VCD&apos;, &apos;Vshpere&apos;, &apos;Anthos&apos;], description: &apos;&apos;)
        string(name: &apos;Area&apos;, defaultValue: &apos;flavor&apos;)
        string(name: &apos;NumberParallelExecutions&apos;, defaultValue: &apos;1&apos;)
    }

    stages {
        stage(&apos;Checkout&apos;) {
            steps {
                //script {
                //    currentBuild.rawBuild.project.description = &apos;NEW JOB DESCRIPTION&apos;
                //    currentBuild.rawBuild.project.setDisplayName(&apos;runTestcases&apos;)
                //}

                //sh &apos;docker system prune -af&apos;  //remove all docker stuff without prompting
                //echo &apos;docker prune failed. mayber already running&apos;
                // delete old protos before git and build
                //dir(&apos;go/src/github.com/mobiledgex&apos;) {
                //    sh &apos;rm -rf *&apos;
                //}

                dir(&apos;go/src/github.com/mobiledgex/edge-cloud-sampleapps&apos;) {
                    git branch: &apos;master&apos;,
                    credentialsId: &apos;79b116ea-d7ac-4d6c-928d-49b79e5f9bef&apos;,
                    url: &apos;https://github.com/mobiledgex/edge-cloud-sampleapps.git&apos;
                }

                dir(&apos;go/src/github.com/mobiledgex&apos;) {
                    sh &apos;rm -rf *&apos;
                    checkout([$class: &apos;GitSCM&apos;,
                        branches: [[name: &apos;master&apos;]],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [
                            [$class: &apos;SparseCheckoutPaths&apos;,  sparseCheckoutPaths:[
                            [$class:&apos;SparseCheckoutPath&apos;, path:&apos;testcases/*&apos;],
                            [$class:&apos;SparseCheckoutPath&apos;, path:&apos;jenkins/*&apos;],
                            [$class:&apos;SparseCheckoutPath&apos;, path:&apos;modules/*&apos;],
                            [$class:&apos;SparseCheckoutPath&apos;, path:&apos;protos/*&apos;],
                            [$class:&apos;SparseCheckoutPath&apos;, path:&apos;tools/*&apos;],
                            [$class:&apos;SparseCheckoutPath&apos;, path:&apos;certs/*&apos;]
                            ]]
                        ],
                        submoduleCfg: [],
                        userRemoteConfigs: [[credentialsId: &apos;79b116ea-d7ac-4d6c-928d-49b79e5f9bef&apos;,
                        url: &apos;https://github.com/mobiledgex/edge-cloud-qa.git&apos;]]])

                        //unstash &apos;edge-cloud_stash&apos;
                }

                dir(&apos;go/src/github.com/mobiledgex/edge-proto&apos;) {
                   sh &apos;rm -rf $WORKSPACE/go/src/github.com/mobiledgex/edge-proto/*&apos;
                   git branch: CommitVersion,
                   credentialsId: &apos;79b116ea-d7ac-4d6c-928d-49b79e5f9bef&apos;,
                   url: &apos;https://github.com/mobiledgex/edge-proto.git&apos;
                }
                dir(&apos;go/src/github.com/mobiledgex/edge-cloud&apos;) {
                   sh &apos;rm -rf $WORKSPACE/go/src/github.com/mobiledgex/edge-cloud/*&apos;

                   checkout([$class: &apos;GitSCM&apos;,
                       branches: [[name: CommitVersion]],
                       doGenerateSubmoduleConfigurations: false,
                       extensions: [
                           [$class: &apos;SparseCheckoutPaths&apos;,  sparseCheckoutPaths:[
                           [$class:&apos;SparseCheckoutPath&apos;, path:&apos;edgeproto/*&apos;],
                           [$class:&apos;SparseCheckoutPath&apos;, path:&apos;d-match-engine/dme-proto/*&apos;],
                           [$class:&apos;SparseCheckoutPath&apos;, path:&apos;protoc-gen-cmd/protocmd/*&apos;],
                           [$class:&apos;SparseCheckoutPath&apos;, path:&apos;protogen/*&apos;]
                           ]]
                       ],
                       submoduleCfg: [],
                       userRemoteConfigs: [[credentialsId: &apos;79b116ea-d7ac-4d6c-928d-49b79e5f9bef&apos;,
                       url: &apos;https://github.com/mobiledgex/edge-cloud.git&apos;]]])
                }
            }
            post {
                failure { echo &apos;checkout failed&apos; }
            }
        }

        stage(&quot;build protos&quot;) {
            steps {
                dir(&apos;go/src/github.com/mobiledgex/tools&apos;) {
                    sh(script:&apos;/usr/bin/python3 ./build_protos.py --sourcedir $WORKSPACE/go/src/github.com/mobiledgex/edge-cloud/ --sourcedir_proto $WORKSPACE/go/src/github.com/mobiledgex/edge-proto/ --qadir $WORKSPACE/go/src/github.com/mobiledgex&apos;);
                }
            }
            post {
                failure { echo &quot;build_protos.py failed&quot; }
            }
        }
        
        stage(&quot;execute tests&quot;) {
            steps {
                dir(&apos;go/src/github.com/mobiledgex/jenkins&apos;) {
                    sh(script:&apos;export PYTHONPATH=$WORKSPACE/go/src/github.com/mobiledgex/modules;export PATH=$PATH:$WORKSPACE/go/src/github.com/mobiledgex/tools:/home/jenkins/go/bin;export AUTOMATION_CONTROLLER_ADDRESS=&apos; + controller + &apos;;export AUTOMATION_DME_ADDRESS=&apos; + dme + &apos;;export AUTOMATION_DME_REST_ADDRESS=&apos; + dmerest + &apos;;export AUTOMATION_VERSION=&apos; + version + &apos;;export AUTOMATION_DME_CERT=&apos; + dmerestcert + &apos;;export AUTOMATION_OPENSTACK_DEDICATED_ENV=&apos; + openstackenv + &apos;;export AUTOMATION_OPENSTACK_SHARED_ENV=&apos; + openstackenv + &apos;;export AUTOMATION_OPENSTACK_VM_ENV=&apos; + openstackenv + &apos;;export AUTOMATION_OPENSTACK_GPU_ENV=&apos; + openstackenv + &apos;;export AUTOMATION_OPENSTACK_OFFLINE_ENV=&apos; + openstackenv + &apos;;export AUTOMATION_MC_ADDRESS=&apos; + mastercontroller + &apos;;export AUTOMATION_MC_CERT=&apos; + &apos;;export AUTOMATION_INFLUXDB_ADDRESS=&apos; + influxdb + &apos;;export AUTOMATION_OPENSTACK_VMPOOL_ENV=&apos; + openstackenv + &apos;;export AUTOMATION_OPENSTACK_VGPU_ENV=&apos; + openstackenv + &apos;;./execJira_parallel.py&apos;)
                }
            }
            post {
                failure { echo &quot;execJira.py failed for&quot;}
            }
        }
    }

}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>