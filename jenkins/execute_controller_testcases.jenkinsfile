project = "${project}"
version = "${version}"
cycle = "${cycle}"
//jobName = "${components}"

currentBuild.displayName = cycle

def jobList1Parallel = ["runOperatorTests"]

node('jenkinsSlave1'){
    stage('Checkout') {
        dir('go/src/github.com/mobiledgex') {
            checkout([$class: 'GitSCM', 
                branches: [[name: 'master']],
                doGenerateSubmoduleConfigurations: false,
                extensions: [
                    [$class: 'SparseCheckoutPaths',  sparseCheckoutPaths:[
                        [$class:'SparseCheckoutPath', path:'modules/*'],
                        [$class:'SparseCheckoutPath', path:'jenkins/*']
                    ]]
                ],
                submoduleCfg: [],
                userRemoteConfigs: [[credentialsId: '79b116ea-d7ac-4d6c-928d-49b79e5f9bef',
                url: 'https://github.com/mobiledgex/edge-cloud-qa.git']]])
        }
    }
    
   if(currentBuild.result != 'FAILURE') {
      stage("copy tests to ${cycle}") {
          dir('go/src/github.com/mobiledgex/jenkins') {
              //String j = jobListAll.join(" ")
              //def p = pwd()
              def status = -1
              //def s = p + '@script/copyTestsToRelease.py ' + j
              def s = 'export PYTHONPATH=$WORKSPACE/go/src/github.com/mobiledgex/modules;python3 ./copyTestsToRelease.py --version ' + version + ' --project ' + project + ' --cycle ' + cycle
              status = sh(script: s, returnStatus: true);
              println status
              if(status != 0) {
                  println "copyTestsToRelease.py failed"
                  currentBuild.result = 'FAILURE'
              }

              def s2 = 'export PYTHONPATH=$WORKSPACE/go/src/github.com/mobiledgex/modules;python3 ./updateCycleJira.py --project ${project} --version ${version} --cycle ${newCycle} --startdate'
              status2 = sh(script: s2, returnStatus: true);
              println status2
              if(status2 != 0) {
                 println "updateCycleJira.py failed"
                 currentBuild.result = 'FAILURE'
              }
          }
      }
   } else {
      echo "error: not copying tests since currentBuild=Failure. checkout failed."
   }
}

    
